type: checkiO
files:
- name: mission.py
  visible: true
  text: "def checkio(*args):\n    return 0\n\n#These \"asserts\" using only for self-checking\
    \ and not necessary for auto-testing\nif __name__ == '__main__':\n    def almost_equal(checked,\
    \ correct, significant_digits):\n        precision = 0.1 ** significant_digits\n\
    \        return correct - precision < checked < correct + precision\n        \n\
    \    print('Example:')\n    print(checkio(1, 2, 3))\n    \n    assert almost_equal(checkio(1,\
    \ 2, 3), 2, 3), \"3-1=2\"\n    assert almost_equal(checkio(5, -5), 10, 3), \"\
    5-(-5)=10\"\n    assert almost_equal(checkio(10.2, -2.2, 0, 1.1, 0.5), 12.4, 3),\
    \ \"10.2-(-2.2)=12.4\"\n    assert almost_equal(checkio(), 0, 3), \"Empty\"\n\
    \    print(\"Coding complete? Click 'Check' to review your tests and earn cool\
    \ rewards!\")\n"
  learner_created: false
status: Unchecked
code: "def checkio(*args):\n    return 0\n\n#These \"asserts\" using only for self-checking\
  \ and not necessary for auto-testing\nif __name__ == '__main__':\n    def almost_equal(checked,\
  \ correct, significant_digits):\n        precision = 0.1 ** significant_digits\n\
  \        return correct - precision < checked < correct + precision\n        \n\
  \    print('Example:')\n    print(checkio(1, 2, 3))\n    \n    assert almost_equal(checkio(1,\
  \ 2, 3), 2, 3), \"3-1=2\"\n    assert almost_equal(checkio(5, -5), 10, 3), \"5-(-5)=10\"\
  \n    assert almost_equal(checkio(10.2, -2.2, 0, 1.1, 0.5), 12.4, 3), \"10.2-(-2.2)=12.4\"\
  \n    assert almost_equal(checkio(), 0, 3), \"Empty\"\n    print(\"Coding complete?\
  \ Click 'Check' to review your tests and earn cool rewards!\")\n"
seconds_from_change: 9223372036854775807
